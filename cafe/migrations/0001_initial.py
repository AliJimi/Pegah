# Generated by Django 4.1.5 on 2023-01-26 17:35

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True, null=True)),
                ('count', models.PositiveIntegerField(default=0)),
                ('is_available', models.BooleanField(default=True)),
                ('price', models.IntegerField(default=0)),
                ('image', models.ImageField(blank=True, null=True, upload_to='food/')),
            ],
        ),
        migrations.CreateModel(
            name='Material',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('total', models.PositiveIntegerField()),
                ('is_paid', models.BooleanField(default=False)),
                ('ref_id', models.TextField(blank=True, null=True)),
                ('tx_id', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Table',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('number', models.PositiveIntegerField()),
                ('capacity', models.PositiveIntegerField()),
                ('occupation', models.PositiveIntegerField()),
                ('is_available', models.BooleanField(default=True)),
                ('is_reserved', models.BooleanField(default=False)),
                ('is_occupied', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Appetizer',
            fields=[
                ('course_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='cafe.course')),
            ],
            bases=('cafe.course',),
        ),
        migrations.CreateModel(
            name='Breakfast',
            fields=[
                ('course_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='cafe.course')),
            ],
            bases=('cafe.course',),
        ),
        migrations.CreateModel(
            name='Coffee',
            fields=[
                ('course_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='cafe.course')),
            ],
            bases=('cafe.course',),
        ),
        migrations.CreateModel(
            name='ColdDrink',
            fields=[
                ('course_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='cafe.course')),
            ],
            bases=('cafe.course',),
        ),
        migrations.CreateModel(
            name='Dessert',
            fields=[
                ('course_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='cafe.course')),
            ],
            bases=('cafe.course',),
        ),
        migrations.CreateModel(
            name='HotDrink',
            fields=[
                ('course_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='cafe.course')),
            ],
            bases=('cafe.course',),
        ),
        migrations.CreateModel(
            name='MainCourse',
            fields=[
                ('course_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='cafe.course')),
            ],
            bases=('cafe.course',),
        ),
        migrations.CreateModel(
            name='Milkshake',
            fields=[
                ('course_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='cafe.course')),
            ],
            bases=('cafe.course',),
        ),
        migrations.CreateModel(
            name='Smoothie',
            fields=[
                ('course_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='cafe.course')),
            ],
            bases=('cafe.course',),
        ),
        migrations.CreateModel(
            name='Tea',
            fields=[
                ('course_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='cafe.course')),
            ],
            bases=('cafe.course',),
        ),
        migrations.CreateModel(
            name='Reserve',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('table', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cafe.table')),
            ],
        ),
        migrations.CreateModel(
            name='PaymentReserve',
            fields=[
                ('payment_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='cafe.payment')),
                ('reservation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cafe.reserve')),
            ],
            bases=('cafe.payment',),
        ),
    ]
